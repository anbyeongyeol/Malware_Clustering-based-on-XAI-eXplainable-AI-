from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
import pandas as pd
import time
import argparse
import os
import hashlib
import _csv_to_hash
import _sep_csv

# 해당 값은 고정해두기
CSV_TYPE_LIST = ['Backdoor', 'Downloader', 'Generic Malware', 'Ransomware', 'Spyware']
# 고정(데이터 셋 사이트에 존재하는 csv)
CSV_PATH = "PE Header.csv"
# 다운로드 원하는 패밀리(Generic Malware은 꼭 제외하고 선택)
CSV_TYPE_LIST_FOUR = ['Backdoor', 'Downloader', 'Ransomware', 'Spyware']
   
def _start(file_hash, type):
    options = Options()

    # 옵션 설정
    user_agent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36'
    options.add_argument('user-agent=' + user_agent)
    options.add_experimental_option("excludeSwitches", ["enable-logging"])
    options.add_experimental_option('prefs', {
        "download.default_directory": f"C:\\Python\\Coding\\graduate\\{type}",
        "download.prompt_for_download": False,
        "download.directory_upgrade": True,
        "safebrowsing.enabled": True})
    driver = webdriver.Chrome(options=options)
 
    # URL 접속
    url1 = 'https://bazaar.abuse.ch/browse/'
    driver.get(url1)
    time.sleep(30)
    for j in file_hash:
        try:
            query = f'sha256:{j}'
            url1 = 'https://bazaar.abuse.ch/browse/'
            driver.get(url1)
            search_tab = driver.find_element(By.CSS_SELECTOR, '#search')
            search_tab.send_keys(query)
            search_tab.send_keys(Keys.ENTER)
            
            time.sleep(3)

            driver.find_element(By.XPATH, '//*[@id="samples"]/tbody/tr/td[2]/a').click()
            driver.find_element(By.XPATH, '/html/body/main/table/tbody/tr[7]/td/a').click()
            time.sleep(1)
            tag_div = driver.find_element(By.CSS_SELECTOR, 'body > main > div.container.text-center')
            tag_button = tag_div.find_element(By.TAG_NAME, 'button')
            tag_id = tag_button.get_attribute('id')
            driver.find_element(By.XPATH, '//*[@id="{}"]'.format(tag_id)).click()
            time.sleep(1)
            
            file_hash.append(j)
        except:
            df = pd.DataFrame(file_hash)
            df.columns = ['sha256']
            df.to_csv('result.csv', index=False)
            
        # CSV 생성
    df = pd.DataFrame(file_hash)
    df.columns = ['sha256']
    df.to_csv('result.csv', index=False)


if __name__ == "__main__":
    _sep_csv.change_csv(CSV_PATH, CSV_TYPE_LIST)
    for ctl in CSV_TYPE_LIST_FOUR:
        hash_list = _csv_to_hash.get_hash(CSV_PATH, ctl)
        print(f"[+] {ctl} 악성코드 크롤링 시작")
        _start(hash_list, ctl)
    # file_unzip()
